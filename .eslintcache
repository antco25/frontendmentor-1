[{"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\reportWebVitals.js":"1","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\App\\App.tsx":"2","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\index.tsx":"3","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Card\\Card.tsx":"4","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Form\\Form.tsx":"5","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Input\\Input.tsx":"6","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Utils\\utils.tsx":"7"},{"size":362,"mtime":1610202921911,"results":"8","hashOfConfig":"9"},{"size":813,"mtime":1610892228668,"results":"10","hashOfConfig":"9"},{"size":505,"mtime":1610220356993,"results":"11","hashOfConfig":"9"},{"size":554,"mtime":1610892183223,"results":"12","hashOfConfig":"9"},{"size":3155,"mtime":1610828201613,"results":"13","hashOfConfig":"9"},{"size":1487,"mtime":1610828189784,"results":"14","hashOfConfig":"9"},{"size":233,"mtime":1610329072134,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rhbl98",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\reportWebVitals.js",[],"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\App\\App.tsx",[],"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\index.tsx",[],"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Card\\Card.tsx",[],"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Form\\Form.tsx",["31"],"C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Input\\Input.tsx",["32","33","34"],"import { ChangeEvent, useState } from 'react'\r\nimport './Input.scss';\r\nimport iconError from './icon-error.svg'\r\n\r\ntype InputType = \"text\" | \"password\" | \"submit\";\r\n\r\ntype InputProps = {\r\n    id?: number,\r\n    type?: InputType,\r\n    value?: string,\r\n    isError?: boolean,\r\n    errorMessage?: string,\r\n    onChange?: (e : ChangeEvent<HTMLInputElement>, id: number) => any\r\n}\r\n\r\nconst Input = ({ id, type, value, isError, errorMessage, onChange}: InputProps) => {\r\n\r\n    const [focused, setFocused] = useState(false)\r\n\r\n    const onFocus = () => {\r\n        setFocused(true)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setFocused(false)\r\n    }\r\n\r\n    if (type === \"submit\")\r\n        return (\r\n            <div className=\"input\">\r\n                <input type=\"submit\" value={value} />\r\n            </div>\r\n        )\r\n\r\n    const wrapperClass = \"input-wrapper\" + (focused ? \" input-focus\" : \"\") + (isError ? \" input-error\" : \"\")\r\n    const _onChange = ((onChange != undefined && id != undefined) ? (e : ChangeEvent<HTMLInputElement>) => onChange(e, id) : undefined)\r\n\r\n    return (\r\n        <div className=\"input\">\r\n            <div className={wrapperClass}>\r\n                <input type={type ? type : \"text\"} placeholder={value} onFocus={onFocus} onBlur={onBlur} onChange={_onChange} />\r\n                {isError ? <img src={iconError} /> : null}\r\n            </div>\r\n            {isError && errorMessage ? <p>{errorMessage}</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","C:\\Users\\Anthony\\Desktop\\WebDev\\fem-challenge-1\\src\\Components\\Utils\\utils.tsx",[],{"ruleId":"35","severity":1,"message":"36","line":74,"column":76,"nodeType":"37","endLine":74,"endColumn":88},{"ruleId":"38","severity":1,"message":"39","line":36,"column":34,"nodeType":"40","messageId":"41","endLine":36,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":36,"column":53,"nodeType":"40","messageId":"41","endLine":36,"endColumn":55},{"ruleId":"42","severity":1,"message":"43","line":42,"column":28,"nodeType":"37","endLine":42,"endColumn":51},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]